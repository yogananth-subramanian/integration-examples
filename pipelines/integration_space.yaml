apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: provision-env-pull-request
  namespace: ysubrama-tenant
spec:
  tasks:
    - name: provision-env
      taskSpec:
        results:
          - name: secretRef
            description:
              SecretRef is the name of the secret with a SA token that has admin-like
              (or whatever we set in the tier template) permissions in the namespace
            type: string
        steps:
          - name: request-ephemeral-namespace
            image: registry.redhat.io/openshift4/ose-cli:4.13@sha256:73df37794ffff7de1101016c23dc623e4990810390ebdabcbbfa065214352c7c
            env:
              - name: KONFLUXNAMESPACE
                value: "$(context.pipelineRun.namespace)"
              - name: PIPELINERUN_NAME
                value: "$(context.pipelineRun.name)"
              - name: PIPELINERUN_UID
                value: "$(context.pipelineRun.uid)"
            script: |
              #!/bin/bash
              set -ex
              set -o pipefail
      
              cat <<EOF > space_request.yaml
              apiVersion: toolchain.dev.openshift.com/v1alpha1
              kind: SpaceRequest
              metadata:
                generateName: task-spacerequest-
                namespace: $KONFLUXNAMESPACE
                ownerReferences:
                - apiVersion: tekton.dev/v1
                  kind: PipelineRun
                  name: $PIPELINERUN_NAME
                  uid: $PIPELINERUN_UID
              spec:
                tierName: appstudio-env
              EOF
      
              SPACEREQUEST_NAME=$(oc create -f space_request.yaml -o=jsonpath='{.metadata.name}')
      
              if oc wait spacerequests $SPACEREQUEST_NAME --for=condition=Ready --timeout=5m -n $KONFLUXNAMESPACE; then
                secretRef=$(oc get spacerequests $SPACEREQUEST_NAME -o=jsonpath='{.status.namespaceAccess[0].secretRef}')
                echo -n $secretRef | tee $(results.secretRef.path)
              else
                exit 1
              fi
     
    - name: verify-provisioning
      runAfter: [provision-env]
      taskSpec:
        steps:
          - name: verify-provisioning
            image: registry.redhat.io/openshift4/ose-cli:4.13@sha256:73df37794ffff7de1101016c23dc623e4990810390ebdabcbbfa065214352c7c
            env:
              - name: KUBECONFIG_VALUE
                valueFrom:
                  secretKeyRef:
                    name: "$(tasks.provision-env.results.secretRef)"
                    key: kubeconfig
            script: |
              #!/bin/bash
              set -ex

              cat <<< "$KUBECONFIG_VALUE" > /tmp/cfg
                oc run --kubeconfig /tmp/cfg test-pod --image=nginx
                oc get --kubeconfig /tmp/cfg pods
                oc get --kubeconfig /tmp/cfg pods test-pod -o=jsonpath='{.metadata.namespace}'
                oc delete --kubeconfig /tmp/cfg pod test-pod
