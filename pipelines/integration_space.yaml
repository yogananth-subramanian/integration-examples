apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/redhat-appstudio/tekton-tools?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-event: '[pull_request]'
    pipelinesascode.tekton.dev/on-target-branch: '[main]'
    appstudio.openshift.io/application: tekton-tools
    appstudio.openshift.io/component: tekton-tools
    pipelines.appstudio.openshift.io/type: build
  name: provision-env-pull-request
  namespace: gbenhaim-tenant
spec:
  pipelineSpec:
    tasks:
      - name: provision-env
        taskRef:
          name: provision-env-with-ephemeral-namespace
          kind: Task
      - name: verify-provisioning
        runAfter: [provision-env]
        taskSpec:
          steps:
            - name: verify-provisioning
              image: registry.redhat.io/openshift4/ose-cli:4.13@sha256:73df37794ffff7de1101016c23dc623e4990810390ebdabcbbfa065214352c7c
              env:
                - name: KUBECONFIG_VALUE
                  valueFrom:
                    secretKeyRef:
                      name: "$(tasks.provision-env.results.secretRef)"
                      key: kubeconfig
              script: |
                #!/bin/bash
                set -ex

                cat <<< "$KUBECONFIG_VALUE" > /tmp/cfg
                oc run --kubeconfig /tmp/cfg test-pod --image=nginx
                oc get --kubeconfig /tmp/cfg pods
                oc get --kubeconfig /tmp/cfg pods test-pod -o=jsonpath='{.metadata.namespace}'
                oc delete --kubeconfig /tmp/cfg pod test-pod