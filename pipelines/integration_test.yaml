apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: integration-test-app
spec:
  description: >-
    Expects a Snapshot of a simple application with endpoint containing the expected output to be deployed on an environment.
    A secret containing the kubeconfig for the environment needs to be mounted via the cluster-credentials workspace binding.
    The route to the single component is expected to have the same name as the component (default appstudio behavior).
  params:
    - description: 'Snapshot of the application'
      name: SNAPSHOT
      default: '{"components": [{"name":"test-app", "containerImage": "quay.io/example/repo:latest"}]}'    
  tasks:
    - name: example-push-task1
      params:
        - name: SNAPSHOT
      taskSpec:
        params:
          - name: SNAPSHOT
        results:
          - name: url
            description: Test output
          - name: exists
            description: Test output
        steps:
        - image: docker.io/dwdraju/alpine-curl-jq
          script: |
            echo "Hello example-push-task!"
            echo $(params.SNAPSHOT)|jq -r .components[].containerImage |  tr -d '\n\t' | tee $(results.url.path)
            echo -n "yes" | tee $(results.exists.path)
    - name: example-sidecar
      params:
        - name: url
          value: $(tasks.example-push-task1.results.url)         
      taskSpec:
        params:
          - name: url
        sidecars:
        - image: $(params.url)
        steps:
        - image: docker.io/jordi/ab
          command: ["ab","-e","$(workspaces.shared.path)/output.csv","http://localhost:3001/"]
      when:
        - input: "$(tasks.example-push-task1.results.exists)"
          operator: in
          values: ["yes"]
      workspaces:
      - name: shared
    - name:  test-output
      taskSpec:
        steps:
        - image: docker.io/dwdraju/alpine-curl-jq
          script: |
            echo "Hello example-push-task!"
            cat $(workspaces.shared.path)/output.csv
      runAfter:
        - example-sidecar
      workspaces:
      - name: shared

  workspaces:
  - name: shared
    volumeClaimTemplate:
      metadata:
        creationTimestamp: null
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status: {}  
