apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: integration-test-app
spec:
  description: >-
    Expects a Snapshot of a simple application with endpoint containing the expected output to be deployed on an environment. 
    A secret containing the kubeconfig for the environment needs to be mounted via the cluster-credentials workspace binding.
    The route to the single component is expected to have the same name as the component (default appstudio behavior).
  params:
    - description: 'Snapshot of the application'
      name: SNAPSHOT
      default: '{"components": [{"name":"test-app", "containerImage": "quay.io/example/repo:latest"}]}'
      type: string
    - description: 'Namespace where the application is running'
      name: NAMESPACE
      default: "default"
      type: string
    - description: 'Expected output'
      name: EXPECTED_OUTPUT
      default: "Hello World"
      type: string
    - description: 'Application endpoint port'
      name: PORT
      default: ""
      type: string     
  tasks:
    - name: test-app-endpoint1
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
        - name: NAMESPACE
          value: $(params.NAMESPACE)
        - name: EXPECTED_OUTPUT
          value: $(params.SNAPSHOT)
        - name: PORT
          value: $(params.PORT)
      workspaces:
        - name: cluster-credentials
          workspace: cluster-credentials      
      taskSpec:
        params:
          - name: SNAPSHOT
            description: Expected output of the application endpoint
          - default: 'default'
            name: NAMESPACE
            description: Namespace of the application under test
          - default: "Hello World"
            name: EXPECTED_OUTPUT
            description: Expected output of the application endpoint
          - default: ""
            name: PORT
            description: Application endpoint Port
        results:
          - name: APP_URL
            description: APP URL
          - name: TEST_OUTPUT
            description: Test output             
        workspaces:
          - name: cluster-credentials
            optional: true                
        steps:
        - image: quay.io/redhat-appstudio/hacbs-test:latest
          env:
            - name: SNAPSHOT
              value: $(params.SNAPSHOT)
            - name: NAMESPACE
              value: $(params.NAMESPACE)
            - name: EXPECTED_OUTPUT
              value: $(params.EXPECTED_OUTPUT)
            - name: PORT
              value: $(params.PORT)        
          script: |
            #!/usr/bin/env bash
            export KUBECONFIG=$(workspaces.cluster-credentials.path)/kubeconfig

            # Get the route for the application endpoint
            COMPONENT_NAME=$(echo -n ${SNAPSHOT} | jq -r .components[0].name)
            # The --insecure-skip-tls-verify option is added for local testing
            # when the clusters only have self-signed certificates.
            # This option should not be used in production.
            ROUTE_NAME=$(oc get routes -l app.kubernetes.io/name="${COMPONENT_NAME}" -o name --insecure-skip-tls-verify)
            HOST=$(oc get "${ROUTE_NAME}" -o jsonpath={.spec.host} -n "${NAMESPACE}" --insecure-skip-tls-verify)
            echo "Found target host ${HOST} for app ${APPLICATION_NAME}"
            
            # Check the application endpoint
            ENDPOINT_OUTPUT=$(curl -k http://${HOST}:${PORT})
            echo -e "The endpoint outputs the following:\n ${ENDPOINT_OUTPUT}"
            echo -e "Expected endpoint output:\n ${EXPECTED_OUTPUT}"
            echo -e "Snapshot output:\n ${SNAPSHOT}"

            echo ${HOST} > /tekton/home/endpoint_url            
            echo -n ${HOST} | tee $(results.APP_URL.path)                   
    - name: example-push-task2
      params:
        - name: url
          value: $(tasks.test-app-endpoint1.results.APP_URL)      
      taskSpec:
        params:
          - name: url 
        steps:
        - image: docker.io/jordi/ab
          name: perf
          command: ["ab","-g","/workspace/output.tsv","http://$(params.url)/"]
        - image: quay.io/yogananth_subramanian/curl-yq-jq
          name: step1
          script: |
            echo "Transform result to json format"
            cat /workspace/output.tsv
            yq  -oj /workspace/output.tsv|jq .[]|jq --arg foo bar '. + {"$schema": "uri:nodejs1:0.1"}'|tee /workspace/test_result.json            
  workspaces:
    - name: cluster-credentials
      optional: true
